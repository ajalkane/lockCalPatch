diff -rupN original/usr/share/lipstick-jolla-home-qt5/lockscreen/BorderRectangle.qml patch/usr/share/lipstick-jolla-home-qt5/lockscreen/BorderRectangle.qml
--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/BorderRectangle.qml	1970-01-01 01:00:00.000000000 +0100
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/BorderRectangle.qml	2015-08-27 07:52:53.000000000 +0100
@@ -0,0 +1,48 @@
+import QtQuick 2.0
+import Sailfish.Silica 1.0
+
+Item
+{
+    id: item
+    property alias backColor: background.color
+    property alias rightColor: rightBorder.color
+    property alias leftColor: leftBorder.color
+    property alias topColor: topBorder.color
+    property alias bottomColor: bottomBorder.color
+    property int borderWidth: 2
+    Rectangle 
+    {
+        id: background
+        anchors.fill: parent
+        opacity: parent.opacity
+        radius: 1
+    }
+    Rectangle 
+    {
+        id: rightBorder 
+        anchors.right: background.right
+        height: parent.height 
+        width: parent.borderWidth
+    }
+    Rectangle 
+    {
+        id: leftBorder 
+        anchors.left: background.left
+        height: parent.height 
+        width: parent.borderWidth
+    } 
+    Rectangle 
+    {
+        id: topBorder 
+        anchors.top: background.top
+        height: parent.borderWidth 
+        width: parent.width
+    }
+    Rectangle 
+    {
+        id: bottomBorder 
+        anchors.bottom: background.bottom
+        height: parent.borderWidth 
+        width: parent.width
+   }  
+}
\ No newline at end of file
diff -rupN original/usr/share/lipstick-jolla-home-qt5/lockscreen/LockEventItem.qml patch/usr/share/lipstick-jolla-home-qt5/lockscreen/LockEventItem.qml
--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/LockEventItem.qml	1970-01-01 01:00:00.000000000 +0100
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/LockEventItem.qml	2015-08-27 07:51:22.000000000 +0100
@@ -0,0 +1,72 @@
+import QtQuick 2.0
+import Sailfish.Silica 1.0
+
+Row {
+
+        property alias dateLabelColor: dateLabel.color
+        property alias timeLabelColor: timeLabel.color
+        property alias eventLabelColor: nameLabel.color
+        property alias dateLabelSize: dateLabel.font.pixelSize
+        property alias timeLabelSize: timeLabel.font.pixelSize
+        property alias eventLabelSize: nameLabel.font.pixelSize
+
+    property alias eventName: nameLabel.text
+    property alias allDay: timeLabel.allDay
+    property alias startTime: timeLabel.startTime
+    property alias endtime: timeLabel.endTime
+    property alias activeDay: timeLabel.activeDay
+    property alias color: rectangle.color
+    spacing: Theme.paddingSmall
+
+    Rectangle 
+    {
+        id: rectangle
+
+        radius: Theme.paddingSmall/3
+        width: Theme.paddingSmall
+        height: parent.height - Theme.paddingSmall/2
+        anchors.verticalCenter: parent.verticalCenter
+    }
+    Column
+    {
+       id: dataCol
+       spacing: -Theme.paddingSmall
+       Row 
+       {
+            id: labelRow
+            spacing: Theme.paddingSmall
+
+            Label 
+            {
+               id: dateLabel
+    
+               function fdw(d) 
+               {
+                  var t = new Date
+                  var t2 = new Date(d)
+                  var today = new Date(t.getFullYear(), t.getMonth(), t.getDate())
+                  var day = new Date(t2.getFullYear(), t2.getMonth(), t2.getDate())
+                  var delta = (day - today) / 86400000
+                  if (delta == 0) return qsTrId("Today")
+                  else if (delta == 1) return qsTrId("Tomorrow")
+                  else return capitalize(Qt.formatDate(d, qsTrId("d MMM")))
+              }
+
+              function capitalize(string)
+              {
+                  return string.charAt(0).toUpperCase() + string.substr(1)
+              }
+
+              text: fdw(startTime) + ":"
+            }
+            LockTimeLabel 
+            {
+                id: timeLabel
+            }
+        }
+        Label 
+        {
+            id: nameLabel
+        }
+    }
+}
diff -rupN original/usr/share/lipstick-jolla-home-qt5/lockscreen/Lockscreen.qml patch/usr/share/lipstick-jolla-home-qt5/lockscreen/Lockscreen.qml
--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/Lockscreen.qml	2015-06-25 06:33:45.000000000 +0100
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/Lockscreen.qml	2015-09-04 11:56:57.000000000 +0100
@@ -370,6 +370,25 @@ MouseArea {
         }
     }
 
+    ShowCalEvents
+    {
+       id: showcalevents
+       anchors 
+       {
+           top: {
+              try {
+                 weatherData.bottom
+              }
+              catch(e) {
+                 networkNameAndDateLabels.bottom
+              }
+           }
+           topMargin: Theme.paddingMedium
+           right: parent.right
+           rightMargin: Theme.paddingMedium
+       }
+    }
+
     Timer {
         id: hideDateTimer
         interval: 3000
diff -rupN original/usr/share/lipstick-jolla-home-qt5/lockscreen/LockTimeLabel.qml patch/usr/share/lipstick-jolla-home-qt5/lockscreen/LockTimeLabel.qml
--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/LockTimeLabel.qml	1970-01-01 01:00:00.000000000 +0100
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/LockTimeLabel.qml	2015-08-27 07:51:22.000000000 +0100
@@ -0,0 +1,51 @@
+import QtQuick 2.0
+import Sailfish.Silica 1.0
+
+Label 
+{
+    property bool allDay
+    property date startTime
+    property date endTime
+    property date activeDay
+
+
+    function addSuffix(i,todayDate) 
+    {
+
+        if((i - todayDate) ==0 ) return ("Today")
+        if((i - todayDate) ==1 ) return ("Tomorrow")
+ 
+        var j = i % 10
+        var k = i % 100
+        if (j == 1 && k != 11) return i + "st" 
+        if (j == 2 && k != 12) return i + "nd" 
+        if (j == 3 && k != 13) return i + "rd" 
+        return i + "th" 
+    }
+    text: 
+    {
+       var activeDayStart = new Date(activeDay.getFullYear(), activeDay.getMonth(), activeDay.getDate())
+        var tomorrow = new Date(activeDayStart)
+        tomorrow.setDate(tomorrow.getDate() + 1)
+
+        var _start = startTime
+        var _end = endTime
+
+        if (allDay) 
+        {
+            //% "All day"
+
+
+            if (_end.getDate() != _start.getDate()) return ( "All day - " +  addSuffix(_end.getDate(),activeDayStart.getDate())  )
+
+            return qsTrId("All day")
+        }
+
+        if (_end.getDate() != _start.getDate()) return (Format.formatDate(_start, Formatter.TimeValue) + "-"
+                +  addSuffix(_end.getDate(),activeDayStart.getDate()) + ": " + Format.formatDate(_end, Formatter.TimeValue))
+
+        return (Format.formatDate(_start, Formatter.TimeValue) + "-"
+                + Format.formatDate(_end, Formatter.TimeValue))
+    }
+}
+
diff -rupN original/usr/share/lipstick-jolla-home-qt5/lockscreen/ShowCalEvents.qml patch/usr/share/lipstick-jolla-home-qt5/lockscreen/ShowCalEvents.qml
--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/ShowCalEvents.qml	1970-01-01 01:00:00.000000000 +0100
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/ShowCalEvents.qml	2015-09-03 07:53:56.000000000 +0100
@@ -0,0 +1,252 @@
+
+import QtQuick 2.0
+import Sailfish.Silica 1.0
+import org.nemomobile.time 1.0
+import org.nemomobile.calendar 1.0
+import org.nemomobile.configuration 1.0
+
+Item
+{
+    ConfigurationGroup 
+    {
+        id: lockscreenUpcomingSettings
+        path: "/desktop/lipstick-jolla-home/lockscreenUpcoming"
+        property int maxEvents: 5
+        property int nDaysForward: 7
+        property int daysWeeksMonths: 0
+        property color backgroundColor: "grey"
+        property color tBorder: "white"
+        property color bBorder: "white"
+        property color lBorder: "white"
+        property color rBorder: "white"
+        property bool bgrIsTr: false
+        property bool tbrIsTr: false
+        property bool bbrIsTr: false
+        property bool lbrIsTr: false
+        property bool rbrIsTr: false
+        property int borderThick: 2
+        
+        property int dateLabelSize: Theme.fontSizeMedium
+        property int timeLabelSize: Theme.fontSizeMedium
+        property int eventLabelSize: Theme.fontSizeMedium
+        property color dateLabelColor: Theme.highlightColor
+        property color timeLabelColor: Theme.primaryColor
+        property color eventLabelColor: Theme.primaryColor
+        property bool showMessage: false
+        onValueChanged: 
+        {
+            eventUpdater.update()
+        }
+    }
+    function getHeight ()
+    {
+        var height
+        if( eventList.count> lockscreenUpcomingSettings.maxEvents) height =  eventList.itemHeight*lockscreenUpcomingSettings.maxEvents + 2* lockscreenUpcomingSettings.borderThick
+        else if(eventList.count>0) height = eventList.itemHeight*eventList.count+ 2* lockscreenUpcomingSettings.borderThick
+        else height =noEvMessage.height + 2* lockscreenUpcomingSettings.borderThick
+
+        return height
+    }
+
+    width: 415*Screen.width/540
+    height: getHeight()
+    anchors.right: parent.right 
+    
+    Rectangle
+    {
+        visible: (eventList.count > 0 || lockscreenUpcomingSettings.showMessage) 
+        id: background
+        anchors.fill: parent
+        color:lockscreenUpcomingSettings.bgrIsTr ? "transparent" : lockscreenUpcomingSettings.backgroundColor 
+        opacity: lipstickSettings.lowPowerMode ? 0.0 : 0.3
+        radius: 1
+    }
+    BorderRectangle 
+    {
+        visible: (eventList.count > 0 || lockscreenUpcomingSettings.showMessage) 
+        id: borders
+        anchors.fill: parent
+        backColor: "transparent"
+        rightColor: lockscreenUpcomingSettings.rbrIsTr ? "transparent" : (lipstickSettings.lowPowerMode ?Theme.highlightColor :lockscreenUpcomingSettings.rBorder)
+        leftColor: lockscreenUpcomingSettings.lbrIsTr ? "transparent" :(lipstickSettings.lowPowerMode ?Theme.highlightColor :lockscreenUpcomingSettings.lBorder)
+        topColor: lockscreenUpcomingSettings.tbrIsTr ? "transparent" :(lipstickSettings.lowPowerMode ?Theme.highlightColor :lockscreenUpcomingSettings.tBorder)
+        bottomColor: lockscreenUpcomingSettings.bbrIsTr ? "transparent" :(lipstickSettings.lowPowerMode ?Theme.highlightColor :lockscreenUpcomingSettings.bBorder)
+        borderWidth: lockscreenUpcomingSettings.borderThick
+    }
+
+    Label
+    {
+        id: noEvMessage
+        x: lockscreenUpcomingSettings.borderThick + Theme.paddingSmall
+y:lockscreenUpcomingSettings.borderThick
+        width: parent.width
+        visible: (eventList.count == 0  && lockscreenUpcomingSettings.showMessage)
+        text: getMessage()
+        color: lockscreenUpcomingSettings.eventLabelColor
+        font.pixelSize: lockscreenUpcomingSettings.eventLabelSize
+
+
+        function getMessage ()
+        {
+            var message = "No events for the next "
+
+            if(lockscreenUpcomingSettings.nDaysForward > 1) message = message +  lockscreenUpcomingSettings.nDaysForward +" "
+
+            if(lockscreenUpcomingSettings.daysWeeksMonths == 0) message = message + "day"
+            else if(lockscreenUpcomingSettings.daysWeeksMonths == 1) message = message + "week"
+            else message = message + "month"
+
+            if(lockscreenUpcomingSettings.nDaysForward > 1) message = message + "s"
+            return message
+        } 
+    }
+
+    WallClock 
+    {
+        id: wallClock
+
+        // TODO: only update when Switcher is visible
+        updateFrequency: WallClock.Day
+        onSystemTimeUpdated: 
+        {
+            eventUpdater.update()
+        }
+    }
+    Item 
+    {
+        x: lockscreenUpcomingSettings.borderThick + Theme.paddingSmall
+y:lockscreenUpcomingSettings.borderThick
+        width: parent.width
+        height: parent.height
+
+        ListModel 
+        {
+            id: activeAndComing
+        }
+
+        Timer 
+        {
+            id: eventUpdater
+
+            onTriggered: update()
+
+            function update() 
+            {
+                activeAndComing.clear()
+
+                var now = new Date
+                var nextEnding = undefined
+                var prevEvent = undefined
+
+                for (var i = 0; i < allEvents.count; ++i) 
+                {
+                    var occurrence = allEvents.get(i, AgendaModel.OccurrenceObjectRole)
+                    var event = allEvents.get(i, AgendaModel.EventObjectRole)
+
+                    if (event.allDay || now < occurrence.endTime && event !== prevEvent) 
+                    {
+                        prevEvent = event
+                        activeAndComing.append({ displayLabel: event.displayLabel, allDay: event.allDay, startTime: occurrence.startTime, endTime: occurrence.endTime, color: event.color })
+                        if (!event.allDay && (nextEnding == undefined || occurrence.endTime < nextEnding)) 
+                        {
+                            nextEnding = occurrence.endTime
+                        }
+                    }
+                }
+
+                if (nextEnding !== undefined)
+                {
+                    var timeout = Math.max(0, nextEnding.getTime() - now.getTime() + 1000)
+                    if (timeout > 0) 
+                    {
+                        eventUpdater.interval = timeout
+                        eventUpdater.start()
+                    }
+                    else
+                    {
+                        eventUpdater.stop()
+                    }
+               }
+               else
+               {
+                    eventUpdater.stop()
+                }
+            }
+        }
+
+        AgendaModel 
+        {
+            id: allEvents
+            startDate: wallClock.time
+            onUpdated: eventUpdater.update()
+
+            function getEndDate()
+            {
+                switch(lockscreenUpcomingSettings.daysWeeksMonths) 
+                {
+                    case 0:
+                    {
+                        return  QtDate.addDays(wallClock.time, lockscreenUpcomingSettings.nDaysForward)
+                        break
+                    }
+                    case 1:
+                    {
+                        return QtDate.addDays(wallClock.time, lockscreenUpcomingSettings.nDaysForward *7)
+                        break
+                    }
+                    case 2:
+                    {
+                        var addM =lockscreenUpcomingSettings.nDaysForward
+                        var addY = 0
+                        if (addM >12)
+                        {
+                            addM = addM - 12
+                            addY = 1
+                        }
+ 
+                        var endDate = new Date(wallClock.time.getFullYear()+addY, wallClock.time.getMonth() + addM, wallClock.time.getDate())
+                        return endDate
+                        break
+                    }
+                }
+           
+            }
+            endDate: getEndDate()
+        }
+
+        ListView 
+        {
+            id: eventList
+
+            property real itemHeight
+
+            clip: true
+            model:  activeAndComing
+            interactive: false
+            width: parent.width
+            height: eventList.count> lockscreenUpcomingSettings.maxEvents ? eventList.itemHeight*lockscreenUpcomingSettings.maxEvents : eventList.itemHeight*eventList.count
+            //spacing: Theme.paddingSmall
+            visible: count > 0
+            delegate: LockEventItem
+            {
+                eventName: model.displayLabel
+                allDay: model.allDay
+                startTime: model.startTime
+                endtime: model.endTime
+                activeDay: wallClock.time
+                color: model.color
+
+                dateLabelColor: lockscreenUpcomingSettings.dateLabelColor
+                timeLabelColor: lockscreenUpcomingSettings.timeLabelColor
+                eventLabelColor: lockscreenUpcomingSettings.eventLabelColor
+                dateLabelSize: lockscreenUpcomingSettings.dateLabelSize
+                timeLabelSize: lockscreenUpcomingSettings.timeLabelSize
+                eventLabelSize: lockscreenUpcomingSettings.eventLabelSize
+
+                Component.onCompleted: eventList.itemHeight = height  
+            }
+        }
+    } 
+}
+ 
+
